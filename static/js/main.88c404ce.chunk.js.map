{"version":3,"sources":["IngredientComponents/IngredientData.tsx","IngredientComponents/RecipeData.tsx","IngredientComponents/IngredientElement.tsx","IngredientComponents/RecipeComponents/RecipeSummary.tsx","IngredientComponents/IngredientChecklist.tsx","MainPages/MainPage.tsx","App.js","reportWebVitals.js","index.js"],"names":["IngredientMap","Map","IngredientData","RecipeData","name","time","extra","list","descList","steps","IngredientElement","props","onCheck","type","onChange","useStyles","makeStyles","recipePaper","padding","marginBottom","descPaper","marginTop","nameTitle","fontWeight","fontSize","listItem","marginLeft","listTitle","RecipeSummary","classes","useState","isHidden","setHidden","Paper","elevation","className","onClick","Typography","style","display","map","el","mainGrid","recipeGrid","isAllCheck","whatDo","IngredientChecklist","isAll","setIsAll","Array","length","fill","ingMap","setIngMap","filter","ing","get","eligibleRecipes","setEligibleRecipes","useEffect","recipe","Grid","container","direction","alignItems","justifyContent","x","idx","console","log","MainPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAaA,EAAgB,IAAIC,IAAI,CACnC,CAAC,QAAS,GACV,CAAC,SAAU,GACX,CAAC,YAAa,GACd,CAAC,eAAgB,GACjB,CAAC,cAAe,GAChB,CAAC,QAAS,GACV,CAAC,UAAW,GACZ,CAAC,oBAAqB,GACtB,CAAC,aAAc,GACf,CAAC,SAAU,GACX,CAAC,eAAgB,MAeNC,EAAiB,CAC5B,QACA,SACA,YACA,eACA,cACA,QACA,UACA,oBACA,aACA,SACA,gBCrCWC,EAAa,CACxB,CACEC,KAAM,uBACNC,KAAM,GACNC,MAAO,8BACPC,KAAM,CAAC,SAAU,SAAU,eAAgB,eAAgB,aAC3DC,SAAU,CACR,gCACA,aACA,QACA,eACA,WACA,iBACA,qBAEFC,MAAO,CACL,2DACA,4CACA,0DACA,6CACA,gGACA,oFACA,gGACA,uEACA,uCAGJ,CACEL,KAAM,cACNC,KAAM,GACNC,MAAO,kCACPC,KAAM,CAAC,cAAe,SAAU,WAChCC,SAAU,CACR,oBACA,SACA,UACA,iCACA,oBACA,yBACA,WACA,mCAEFC,MAAO,CACL,sEACA,sCACA,4BACA,wDACA,2EACA,sEACA,4EAGJ,CACEL,KAAM,qBACNC,KAAM,GACNC,MAAO,mCACPC,KAAM,CAAC,YAAa,QAAS,cAC7BC,SAAU,CACR,qBACA,kBACA,iBACA,iBACA,aACA,qBAEFC,MAAO,CACL,uDACA,6DACA,mEACA,qEACA,iDACA,kCAGJ,CACEL,KAAM,wBACNC,KAAM,GACNC,MAAO,mBACPC,KAAM,CAAC,YAAa,SAAU,QAAS,qBACvCC,SAAU,CACR,qBACA,aACA,gBACA,oBACA,yBACA,UAEFC,MAAO,CACL,kEACA,8EACA,yDACA,6BACA,6DACA,2BAGJ,CACEL,KAAM,aACNC,KAAM,GACNC,MAAO,4CACPC,KAAM,CAAC,cAAe,SAAU,WAChCC,SAAU,CACR,8BACA,OACA,WACA,QACA,mCACA,2BACA,YACA,qBACA,eAEFC,MAAO,CACL,yBACA,iCACA,mCACA,4BACA,qCACA,wEACA,wEACA,8CACA,yCACA,0FAGJ,CACEL,KAAM,qBACNC,KAAM,GA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","file":"static/js/main.88c404ce.chunk.js","sourcesContent":["export const IngredientMap = new Map([\n  [\"Sugar\", 0],\n  [\"Garlic\", 1],\n  [\"Soy Sauce\", 2],\n  [\"Oyster Sauce\", 3],\n  [\"Kecap Manis\", 4],\n  [\"Onion\", 5],\n  [\"Shallot\", 6],\n  [\"Rice Wine Vinegar\", 7],\n  [\"Sesame Oil\", 8],\n  [\"Ginger\", 9],\n  [\"Spring Onion\", 10],\n]);\n\n// export const ExtraMap: Map<string, boolean> = new Map([\n//   [\"Sugar\", false],\n//   [\"Garlic\", false],\n//   [\"Soy Sauce\", false],\n//   [\"Oyster Sauce\", false],\n//   [\"Kecap Manis\", false],\n//   [\"Onion\", false],\n//   [\"Chicken\", true],\n//   [\"Potato\", true],\n//   [\"Eggs\", true],\n// ]);\n\nexport const IngredientData = [\n  \"Sugar\",\n  \"Garlic\",\n  \"Soy Sauce\",\n  \"Oyster Sauce\",\n  \"Kecap Manis\",\n  \"Onion\",\n  \"Shallot\",\n  \"Rice Wine Vinegar\",\n  \"Sesame Oil\",\n  \"Ginger\",\n  \"Spring Onion\",\n];\n","export const RecipeData = [\n  {\n    name: \"Scallion Oil Chicken\",\n    time: 30,\n    extra: \"Chicken (Thighs/ Drumstick)\",\n    list: [\"Ginger\", \"Garlic\", \"Spring Onion\", \"Oyster Sauce\", \"Soy Sauce\"],\n    descList: [\n      \"2-3 Chicken Thighs/ Drumstick\",\n      \"5cm Ginger\",\n      \"Garic\",\n      \"Spring Onion\",\n      \"3TBS Oil\",\n      \"1TBS Soy Sauce\",\n      \"1TBS Oyster Sauce\",\n    ],\n    steps: [\n      \"1. Slice ginger, garlic, spring onions (Not for eating).\",\n      \"2. Reserve some spring onions and ginger.\",\n      \"3. Boil water, add spring onions and ginger into water.\",\n      \"4. Boil the chicken in water until cooked.\",\n      \"5. Prepare ice water. When chicken is cooked, immediately put into ice water to stop cooking.\",\n      \"6. Once it cools down, peel the meat off the bones into a plate and set it aside.\",\n      \"7. Add about 3TBS oil, and sautee the ginger, garlic and spring onions until really fragrant.\",\n      \"8. Put the oil mixture to a bowl, mix in soy sauce and oyster sauce.\",\n      \"9. Pour oil mixture over chicken. \",\n    ],\n  },\n  {\n    name: \"Nasi Goreng\",\n    time: 15,\n    extra: \"Day old rice, Eggs, Any protein\",\n    list: [\"Kecap Manis\", \"Garlic\", \"Shallot\"],\n    descList: [\n      \"1 Serving of rice\",\n      \"Garlic\",\n      \"Shallot\",\n      \"1TBS Chicken powder (optional)\",\n      \"Pepper (optional)\",\n      \"Kecap Manis (to taste)\",\n      \"1-2 Eggs\",\n      \"Any protein (chicken, meatball)\",\n    ],\n    steps: [\n      \"1. Cut the protein into bite size pieces and cook it. Set it aside.\",\n      \"2. Scramble the eggs, set it aside.\",\n      \"3. Mince garlic, shallot.\",\n      \"4. Heat up oil to the pan, sautee garlic and shallot.\",\n      \"5. Add rice. Turn off heat and mix rice with the garlic and shallot oil.\",\n      \"6. Add chicken powder, pepper and kecap manis. (Heat is still off).\",\n      \"7. Turn heat back on. Mix a little more. Add eggs and protein and mix. \",\n    ],\n  },\n  {\n    name: \"Japanese Beef Bowl\",\n    time: 15,\n    extra: \"Thinly sliced beef (hotpot beef)\",\n    list: [\"Soy Sauce\", \"Sugar\", \"Sesame Oil\"],\n    descList: [\n      \"Thinly Sliced Beef\",\n      \"1TBS Sesame Oil\",\n      \"1.5-2TBS Sugar\",\n      \"2TBS Soy Sauce\",\n      \"1TBS Water\",\n      \"Onions (optional)\",\n    ],\n    steps: [\n      \"1. Marinade: Water + Sesame Oil + Sugar + Soy Sauce.\",\n      \"2. If marinade is not enough, multiply amount accordingly.\",\n      \"3. Slice onions thinly, and sautee in oil until soft (optional).\",\n      \"4. Normally I will unwrap the beef rolls first so it cooks evenly.\",\n      \"5. Add sauce to the onions, then add the beef.\",\n      \"6. Cook until beef is cooked.\",\n    ],\n  },\n  {\n    name: \"Oven Teriyaki Chicken\",\n    time: 40,\n    extra: \"Chicken (Thighs)\",\n    list: [\"Soy Sauce\", \"Garlic\", \"Sugar\", \"Rice Wine Vinegar\"],\n    descList: [\n      \"2-3 Chicken Thighs\",\n      \"5TBS Sugar\",\n      \"1/4 Cup Water\",\n      \"1/2 Cup Soy Sauce\",\n      \"2TBS Rice Wine Vinegar\",\n      \"Garlic\",\n    ],\n    steps: [\n      \"1. Slice garlic (Only for marinade, don't need to slice small).\",\n      \"2. Marinade: Mix sugar, water, water, soy sauce, rice wine vinegar, garlic.\",\n      \"3. Let chicken marinade in sauce for at least 45 mins.\",\n      \"4. Set oven to 350F/ 177C.\",\n      \"5. Put chicken on a baking tray and pour marinade over it.\",\n      \"6. Bake for 35-40mins.\",\n    ],\n  },\n  {\n    name: \"Semur Ayam\",\n    time: 30,\n    extra: \"Chicken (Boneless Thighs), Eggs, Potatoes\",\n    list: [\"Kecap Manis\", \"Garlic\", \"Shallot\"],\n    descList: [\n      \"2-3 Boneless Chicken Thighs\",\n      \"Eggs\",\n      \"Potatoes\",\n      \"Onion\",\n      \"1/2TSP Chicken Powder (optional)\",\n      \"1/4TSP Pepper (optional)\",\n      \"1/2 Onion\",\n      \"2.5TBS Kecap Manis\",\n      \"175ml Water\",\n    ],\n    steps: [\n      \"1. Hard boil the eggs.\",\n      \"2. Chop potatoes, not too big.\",\n      \"3. Chop chicken into bite sized.\",\n      \"4. Mince garlic, shallot.\",\n      \"5. Chop onion, I like long slices.\",\n      \"6. Sautee garlic, onion, shallot in oil until onion is slightly soft.\",\n      \"7. Add chopped chicken, potatoes, season with chicken powder, pepper.\",\n      \"8. Add kecap manis, water into pan and mix.\",\n      \"8. Stir constantly, sauce will reduce.\",\n      \"9. When sauce is thick and chicken is >=90% cooked, add eggs and baste sauce over it.\",\n    ],\n  },\n  {\n    name: \"Asian Garlic Pasta\",\n    time: 15,\n    extra: \"Pasta\",\n    list: [\"Sugar\", \"Garlic\", \"Soy Sauce\", \"Oyster Sauce\"],\n    descList: [\n      \"Garlic (to taste)\",\n      \"Spring Onion (optional) \",\n      \"25g Butter\",\n      \"100g Pasta\",\n      \"1TBS Soy Sauce\",\n      \"1~1.5TBS Oyster Sauce\",\n      \"Parmesan (optional)\",\n      \"Chili Flakes (optional)\",\n    ],\n    steps: [\n      \"1. Boil pasta to al dente.\",\n      \"2. Mince garlic, chop spring onions.\",\n      \"3. Heat butter in pan.\",\n      \"4. Sautee garlic and spring onions until fragrant.\",\n      \"5. Add chilli flakes, soy sauce and oyster sauce, cook for 1-2 mins.\",\n      \"6. Add pasta and stir for 1-2 mins.\",\n    ],\n  },\n  {\n    name: \"Telor Kecap\",\n    time: 15,\n    extra: \"Eggs\",\n    list: [\"Kecap Manis\", \"Soy Sauce\"],\n    descList: [\n      \"2 Eggs\",\n      \"1/2TBS Kecap Manis\",\n      \"1/2TBS Soy Sauce\",\n      \"50ml Water\",\n      \"Oil\",\n      \"Garlic (optional)\",\n      \"Spring Onions (optional)\",\n    ],\n    steps: [\n      \"1. Mix water, soy sauce and oyster sauce in a small bowl.\",\n      \"2. Heat up 1TBS oil on the pan.\",\n      \"3. Sautee minced garlic and chopped spring onions if you have.\",\n      \"4. Crack 2 eggs on the pan.\",\n      \"5. Wait for sunny side up eggs to cook 70% done.\",\n      \"6. Add sauce mixture on the pan, use a spoon to baste over the egg until fully cooked.\",\n    ],\n  },\n];\n","import * as React from \"react\";\n\nconst IngredientElement: React.FC<IngredientElementProps> = (props) => {\n  const { name, onCheck } = props;\n  return (\n    <div>\n      <input type=\"checkbox\" onChange={onCheck} />\n      {name}\n    </div>\n  );\n};\n\ninterface IngredientElementProps {\n  name: String;\n  onCheck: () => void;\n}\nexport default IngredientElement;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  recipePaper: {\n    padding: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  descPaper: {\n    marginTop: \"1rem\",\n    padding: \"1rem\",\n  },\n  nameTitle: {\n    fontWeight: \"bold\",\n    fontSize: \"1.25rem\",\n  },\n  listItem: {\n    marginLeft: \"1.5rem\",\n  },\n  listTitle: {\n    fontSize: \"1.15rem\",\n  },\n});\n\nconst RecipeSummary: React.FC<RecipeSummaryProps> = (props) => {\n  const { name, time, extra, descList, steps } = props;\n  const classes = useStyles();\n  const [isHidden, setHidden] = useState(true);\n\n  return (\n    <Paper\n      elevation={3}\n      className={classes.recipePaper}\n      onClick={() => {\n        setHidden(!isHidden);\n      }}\n    >\n      <Typography className={classes.nameTitle}>{name}</Typography>\n      <Typography> Time: {time} minutes</Typography>\n      <Typography>\n        <i> Extra Ingredients:</i> {extra}\n      </Typography>\n      <Paper\n        elevation={3}\n        className={classes.descPaper}\n        style={{ display: isHidden ? \"none\" : \"block\" }}\n      >\n        <Typography className={classes.listTitle}>Ingredients</Typography>\n        {descList.map((el: String) => {\n          return <Typography className={classes.listItem}> {el} </Typography>;\n        })}\n        <Typography className={classes.listTitle} style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          Directions\n        </Typography>\n        {steps.map((el: String) => {\n          return <Typography className={classes.listItem}> {el} </Typography>;\n        })}\n      </Paper>\n    </Paper>\n  );\n};\n\ninterface RecipeSummaryProps {\n  name: String;\n  time: number;\n  extra: String;\n  descList: any;\n  steps: any;\n}\n\nexport default RecipeSummary;\n","import * as React from \"react\";\nimport { IngredientMap, IngredientData } from \"./IngredientData\";\nimport { RecipeData } from \"./RecipeData\";\nimport IngredientElement from \"./IngredientElement\";\nimport { useEffect, useState } from \"react\";\nimport RecipeSummary from \"./RecipeComponents/RecipeSummary\";\nimport { makeStyles, Grid, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  mainGrid: {\n    marginTop: \"5rem\",\n  },\n  recipeGrid: {\n    marginTop: \"1rem\",\n  },\n  isAllCheck: {\n    fontSize: \"1.25rem\",\n    marginBottom: \"1rem\",\n  },\n  whatDo: {\n    fontWeight: \"bold\",\n    fontSize: \"1.25rem\",\n  },\n});\n\nconst IngredientChecklist: React.FC = () => {\n  const classes = useStyles();\n  const [isAll, setIsAll] = useState(false);\n  const [ingMap, setIngMap] = useState(\n    Array(IngredientData.length).fill(false)\n  );\n  //console.log(ingMap);\n  const [eligibleRecipes, setEligibleRecipes] = useState(\n    RecipeData.filter((el) => {\n      for (const ing in el.list) {\n        if (!isAll && !ingMap[IngredientMap.get(ing) as number]) return false;\n      }\n      return true;\n    })\n  );\n\n  useEffect(() => {\n    setEligibleRecipes(\n      RecipeData.filter((recipe) => {\n        for (const ing of recipe.list) {\n          if (!isAll && !ingMap[IngredientMap.get(ing) as number]) return false;\n        }\n        return true;\n      })\n    );\n  }, [ingMap, isAll]);\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      className={classes.mainGrid}\n    >\n      <Typography className={classes.isAllCheck}>\n        <input\n          type=\"checkbox\"\n          onChange={() => {\n            setIsAll(!isAll);\n          }}\n        />\n        All Recipes\n      </Typography>\n      <Typography className={classes.whatDo}>What Do You Have? </Typography>\n      <Grid direction=\"column\">\n        {IngredientData.map((el: string) => {\n          return (\n            <IngredientElement\n              name={el}\n              onCheck={() => {\n                setIngMap(\n                  ingMap.map((x, idx) => {\n                    if (idx == (IngredientMap.get(el) as number)) {\n                      console.log(IngredientMap.get(el) as number);\n                      return !x;\n                    }\n                    return x;\n                  })\n                );\n                //console.log(ingMap);\n              }}\n            />\n          );\n        })}\n      </Grid>\n      <Grid direction=\"column\" className={classes.recipeGrid}>\n        {eligibleRecipes.map((el: any) => {\n          return (\n            <RecipeSummary\n              name={el.name}\n              time={el.time}\n              extra={el.extra}\n              descList={el.descList}\n              steps={el.steps}\n            />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IngredientChecklist;\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport IngredientChecklist from \"../IngredientComponents/IngredientChecklist\";\n\nconst MainPage: React.FC = () => {\n  return <IngredientChecklist />;\n};\n\nexport default MainPage;\n","import \"./App.css\";\nimport MainPage from \"./MainPages/MainPage.tsx\";\n\nfunction App() {\n  return <MainPage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}